

const _jsxAstUtils = require('jsx-ast-utils');

const _schemas = require('../util/schemas');

const _hasAccessibleChild = require('../util/hasAccessibleChild');

const _hasAccessibleChild2 = _interopRequireDefault(_hasAccessibleChild);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const errorMessage = 'Anchors must have content and the content must be accessible by a screen reader.'; /**
                                                                                                        * @fileoverview Enforce anchor elements to contain accessible content.
                                                                                                        * @author Lisa Ring & Niklas Holmberg
                                                                                                        */

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

const schema = (0, _schemas.generateObjSchema)({ components: _schemas.arraySchema });

module.exports = {
  meta: {
    docs: {},
    schema: [schema],
  },

  create: function create(context) {
    return {
      JSXOpeningElement: function JSXOpeningElement(node) {
        const options = context.options[0] || {};
        const componentOptions = options.components || [];
        const typeCheck = ['a'].concat(componentOptions);
        const nodeType = (0, _jsxAstUtils.elementType)(node);

        // Only check anchor elements and custom types.
        if (typeCheck.indexOf(nodeType) === -1) {
          return;
        } else if ((0, _hasAccessibleChild2.default)(node.parent)) {
          return;
        }

        context.report({
          node,
          message: errorMessage,
        });
      },
    };
  },
};
