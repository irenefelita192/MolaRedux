

const _jsxAstUtils = require('jsx-ast-utils');

const _schemas = require('../util/schemas');

const errorMessage = 'Media elements such as <audio> and <video> must have a <track> for captions.'; /**
                                                                                                    * @fileoverview <audio> and <video> elements must have a <track> for captions.
                                                                                                    * @author Ethan Cohen
                                                                                                    *
                                                                                                    */

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

const MEDIA_TYPES = ['audio', 'video'];

const schema = (0, _schemas.generateObjSchema)({
  audio: _schemas.arraySchema,
  video: _schemas.arraySchema,
  track: _schemas.arraySchema,
});

const isMediaType = function isMediaType(context, type) {
  const options = context.options[0] || {};
  return MEDIA_TYPES.map(mediaType => options[mediaType]).reduce((types, customComponent) => types.concat(customComponent), MEDIA_TYPES).some(typeToCheck => typeToCheck === type);
};

const isTrackType = function isTrackType(context, type) {
  const options = context.options[0] || {};
  return ['track'].concat(options.track || []).some(typeToCheck => typeToCheck === type);
};

module.exports = {
  meta: {
    docs: {},
    schema: [schema],
  },

  create: function create(context) {
    return {
      JSXElement: function JSXElement(node) {
        const element = node.openingElement;
        const type = (0, _jsxAstUtils.elementType)(element);
        if (!isMediaType(context, type)) {
          return;
        }

        // $FlowFixMe https://github.com/facebook/flow/issues/1414
        const trackChildren = node.children.filter((child) => {
          if (child.type !== 'JSXElement') {
            return false;
          }

          // $FlowFixMe https://github.com/facebook/flow/issues/1414
          return isTrackType(context, (0, _jsxAstUtils.elementType)(child.openingElement));
        });

        if (trackChildren.length === 0) {
          context.report({
            node: element,
            message: errorMessage,
          });
          return;
        }

        const hasCaption = trackChildren.some((track) => {
          const kindProp = (0, _jsxAstUtils.getProp)(track.openingElement.attributes, 'kind');
          const kindPropValue = (0, _jsxAstUtils.getLiteralPropValue)(kindProp) || '';
          return kindPropValue.toLowerCase() === 'captions';
        });

        if (!hasCaption) {
          context.report({
            node: element,
            message: errorMessage,
          });
        }
      },
    };
  },
};
