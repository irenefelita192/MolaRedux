

const _ariaQuery = require('aria-query');

const _jsxAstUtils = require('jsx-ast-utils');

const _schemas = require('../util/schemas');

const errorMessage = 'The scope prop can only be used on <th> elements.'; /**
                                                                         * @fileoverview Enforce scope prop is only used on <th> elements.
                                                                         * @author Ethan Cohen
                                                                         */

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

const schema = (0, _schemas.generateObjSchema)();

module.exports = {
  meta: {
    docs: {},
    schema: [schema],
  },

  create: function create(context) {
    return {
      JSXAttribute: function JSXAttribute(node) {
        const name = (0, _jsxAstUtils.propName)(node);
        if (name && name.toUpperCase() !== 'SCOPE') {
          return;
        }

        const parent = node.parent;

        const tagName = (0, _jsxAstUtils.elementType)(parent);

        // Do not test higher level JSX components, as we do not know what
        // low-level DOM element this maps to.
        if (!_ariaQuery.dom.has(tagName)) {
          return;
        } else if (tagName && tagName.toUpperCase() === 'TH') {
          return;
        }

        context.report({
          node,
          message: errorMessage,
        });
      },
    };
  },
};
