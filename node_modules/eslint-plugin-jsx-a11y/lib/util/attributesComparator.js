

Object.defineProperty(exports, '__esModule', {
  value: true,
});

const _jsxAstUtils = require('jsx-ast-utils');

/**
 * Returns true if all items in baseAttributes are found in attributes. Always
 * returns true if baseAttributes is empty.
 */
function attributesComparator() {
  const baseAttributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  const attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  return baseAttributes.every(baseAttr => attributes.some((attribute) => {
    // Guard against non-JSXAttribute nodes like JSXSpreadAttribute
    if (attribute.type !== 'JSXAttribute') {
      return false;
    }
    // Attribute matches.
    if (baseAttr.name !== (0, _jsxAstUtils.propName)(attribute)) {
      return false;
    }
    // Value exists and does not match.
    if (baseAttr.value && baseAttr.value !== (0, _jsxAstUtils.getLiteralPropValue)(attribute)) {
      return false;
    }
    return true;
  }));
}

exports.default = attributesComparator;
