

Object.defineProperty(exports, '__esModule', {
  value: true,
});

const _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj; };

exports.default = getTabIndex;

const _jsxAstUtils = require('jsx-ast-utils');

/**
 * Returns the tabIndex value.
 */
function getTabIndex(tabIndex) {
  const literalValue = (0, _jsxAstUtils.getLiteralPropValue)(tabIndex);

  // String and number values.
  if (['string', 'number'].indexOf(typeof literalValue === 'undefined' ? 'undefined' : _typeof(literalValue)) > -1) {
    // Empty string will convert to zero, so check for it explicity.
    if (typeof literalValue === 'string' && literalValue.length === 0) {
      return undefined;
    }
    const value = Number(literalValue);
    if (Number.isNaN(value)) {
      return undefined;
    }

    return Number.isInteger(value) ? value : undefined;
  }

  // Booleans are not valid values, return undefined.
  if (literalValue === true || literalValue === false) {
    return undefined;
  }

  return (0, _jsxAstUtils.getPropValue)(tabIndex);
}
